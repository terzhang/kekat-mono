# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Message {
  id: ID!
  from: String!
  text: String!
  date: DateTime!
  chatroom: Chatroom!
  user: User!
}

# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

type Chatroom {
  id: ID!
  name: String!
  users: [User!]!
  messages: [Message!]!
  getMessages: [Message!]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  name: String!
  chatrooms: [Chatroom!]
  messages: [Message!]!
  getMessages: [Message!]!
}

input MessageInput {
  chatroomId: String!
  from: String!
  text: String!
}

input ChangePasswordInput {
  token: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

type Query {
  getAllChatrooms(limit: Float!): [Chatroom!]!
  chatroomsOfUser: [Chatroom!]!
  getMe: User!
}

type Mutation {
  joinChatroom(chatroomId: String!): Chatroom!
  addNewMessage(message: MessageInput!): Boolean!
  createChatroomWithUser(roomName: String!): Chatroom
  deleteChatroom(chatroomId: String!): ID!
  confirmEmail(uniqueId: String!): Boolean!
  sendConfirmEmail(email: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  changePassword(data: ChangePasswordInput!): User
  login(data: LoginInput!): String!
  logout: Boolean!
  register(data: RegisterInput!): User!
}

type Subscription {
  newMessage(chatroomId: String!): Message!
}
